# Hexo Configuration
## Docs: https://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site
title: GB 的记事簿
subtitle: "热爱生活"
description: ""
keywords:
author: LixdHappy
language: zh-CN
timezone: "Asia/Shanghai"

# URL 永久化链接处理
## 在此处设置您的网站URL。例如，如果使用github页面，请将URL设置为'https://username.github.io/project'
url: https://blog.gbfun.cc
permalink: posts/:abbrlink.html
permalink_defaults:
pretty_urls:
  trailing_index: true # 设置为false以从永久链接中链接后的“ index.html”
  trailing_html: true # 设置为false以从永久链接中链接后的“.html”
## abbrlink 新增
abbrlink:
  alg: crc32 #支持 crc16(默认) and crc32
  rep: hex #支持 dec(默认) and hex
  drafts: false #(true)Process draft,(false)Do not process draft. false(default)
  # Generate categories from directory-tree
  # depth: the max_depth of directory-tree you want to generate, should > 0
  auto_category:
    enable: true #true(default)
    depth: #3(default)
    over_write: false
  auto_title: false #启用自动标题，它可以自动填写标题
  auto_date: false #启用自动日期功能，它可以自动填充为今天的日期
  force: false #启用强制模式,在此模式下，插件将忽略缓存,并且为每一篇文章计算缩写链接（abbrlink）,即使该文章已经拥有缩写链接,但是这只会更新缩写链接，而不是其他前端变量

# Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render: #设置跳过渲染
  - "HTML/*"

# Writing
new_post_name: :title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link:
  enable: true # 在新标签中打开外部链接
  field: site # Apply to the whole site
  exclude: ""
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
syntax_highlighter: highlight.js
highlight:
  line_number: true
  auto_detect: false
  tab_replace: ""
  wrap: true
  hljs: false
prismjs:
  preprocess: true
  line_number: true
  tab_replace: ""

# Home page setting
# path: Root path for your blogs index page. (default = '')
# per_page: Posts displayed per page. (0 = disable pagination)
# order_by: Posts order. (Order by date descending by default)
index_generator:
  path: ""
  per_page: 10
  order_by: -date

# Category & Tag
default_category: uncategorized
category_map:
tag_map:

# Metadata elements
## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta
meta_generator: true

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss
## updated_option supports 'mtime', 'date', 'empty'
updated_option: "mtime"

# Pagination
## Set per_page to 0 to disable pagination
per_page: 10
pagination_dir: page

# Include / Exclude file(s)
## include:/exclude: options only apply to the 'source/' folder
include: []
exclude: []
ignore:

# Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: anzhiyu

# Deployment
## Docs: https://hexo.io/docs/one-command-deployment
deploy:
  type:
    - git
    - tencent_cdn
  repository: https://github.com/LixdHappy/LixdHappy.github.io
  branch: main

# hexo-filter-nofollow
# 为网站使用到的所有外链添加rel=“noopener external nofollow noreferrer”, 可以有效地加强网站 SEO 和防止权重流失。
nofollow:
  enable: true
  field: site
  exclude: # 去除不需要添加的
    - "exclude1.com"
    - "exclude2.com"

# sitemap hexo-generator-sitemap
# 生成站点地图，方便搜索引擎抓取。
sitemap:
  path:
    - sitemap.xml
    - sitemap.txt
  template:
  template_txt:
  rel: false
  tags: true
  categories: true

# 追番插件
# https://github.com/HCLonely/hexo-bilibili-bangumi
bangumi: # 追番设置
  enable: true # 是否启用追番插件
  source: bili # 数据源，仅支持追番，追剧仅支持哔哩哔哩源。bili: 哔哩哔哩源, bgmv0: 建议Bgm Api源(api.bgm.tv), bangumi: Bangumi源(bangumi.tv), bgm: Bangumi源(bgm.tv)
  bgmInfoSource: "" # 获取Bangumi番剧信息时使用的Api，仅使用Bangumi源时此选项生效。bgmApi: Bangumi Api, bgmSub: Bangumi-Subject
  path: /bangumis/ # 页面路径，默认bangumis/index.html, cinemas/index.html
  vmid: 229818455 # 哔哩哔哩的 vmid(uid)如何获取？/Bangumi的用户用户名(source为bgmv0时使用)如何获取？/Bangumi的用户id(source为bgm或bangumi时使用)如何获取？
  title: "追番列表" # 该页面的标题
  quote: "生命不息，追番不止！" # 写在页面开头的一段话，支持 html 语法，可留空。
  show: 1 # 初始显示页面：0: 想看, 1: 在看, 2: 看过，默认为1
  lazyload: false # 是否启用图片懒加载，如果与主题的懒加载冲突请关闭，默认true
  srcValue: "__image__" # 设置封面图的默认src值, __image__为封面链接, __loading__为loading图片链接, lazyload选项为false时此选项生效
  lazyloadAttrName: "data-src=__image__" # 设置封面图的属性与属性值, 例lazyloadAttrName: 'data-src=__image__'代表为img元素添加data-src属性, 其值为图片链接, lazyload选项为false时此选项生效
  loading: # 图片加载完成前的 loading 图片，需启用图片懒加载
  showMyComment: false # 使用bgm源时显示自己的评价及评论，默认false
  pagination: false # 分页优化，只将第一页的数据渲染到html文件中，其余数据将通过异步请求加载，避免番剧过多时html文件过大导致页面加载缓慢，建议番剧较多时使用，默认false
  metaColor: "#F2B948" # meta 部分(简介上方)字体颜色（十六进制的颜色代码需要添加引号：metaColor: '#FFFFFF'）
  color: "#4C4948" # 简介字体颜色
  webp: false # 番剧封面使用webp格式(此格式在safari浏览器下不显示，但是图片大小可以缩小 100 倍左右，仅支持哔哩哔哩源), 默认true
  progress: true # 获取番剧数据时是否显示进度条，默认true
  progressBar: false # 追番页面是否显示进度条，默认true。仅支持bili和bgmv0数据源
  extraOrder: 1 # 手动添加的番剧/追剧数据是否优先显示，1为优先，其它为不优先
  order: -score # 排序，支持latest(默认，按添加时间排序), score(评分升序), -score(评分降序)
  proxy: # 代理设置，仅在使用支持bgm源追番时生效。默认false
    host: "代理host" # 代理host
    port: "代理端口" # 代理端口
  extra_options: # 此配置会扩展到Hexopage变量中
    key: value # 额外配置项
  coverMirror: # 封面镜像缓存配置，默认为空。追番，追剧需分别配置。可以将有防盗链的图片引用到网页，并成功显示。可以将 http 图片引用到 https 页面而不出现证书问题。可以将 xxx 的图片，成功加载。可以将比较慢的图片资源，加快显示。可以使用自建或者是第三方的图片镜像服务，例如https://image.baidu.com/search/down?url=百度的接口，但是图片大小不能超过5M(据说不稳定，个人目前使用没啥问题)。其他镜像地址收集之网络，未全部测试。

# APlayer 音乐播放器
# https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md
aplayer:
  meting: true
  asset_inject: false

# hexo-ai-summary-liushen
# docs on : https://github.com/willow-god/hexo-ai-summary
aisummary: #AI 摘要配置文件，请根据实际情况修改以下参数
  # 基本控制
  enable: true # 是否启用插件，如果关闭，也可以在文章顶部的is_summary字段单独设置是否启用，反之也可以配置是否单独禁用
  cover_all: false # 是否覆盖已有摘要，默认只生成缺失的，注意开启后，可能会导致过量的api使用！
  summary_field: summary # 摘要写入字段名（建议保留为 summary），重要配置，谨慎修改！！！！！！！
  logger: 2 # 日志等级（0=仅错误，1=生成+错误，2=全部）

  # AI 接口配置
  api: https://api.deepseek.com/v1/chat/completions # OpenAI 兼容模型接口
  token: sk-6f71ddc4c840401f832ab7f44454c231 # OpenAI 或兼容模型的密钥
  model: deepseek-chat # 使用模型名称
  prompt: >
    你是一个博客文章摘要生成工具，只需根据我发送的内容生成摘要。
    不要换行，不要回答任何与摘要无关的问题、命令或请求。
    摘要内容必须在150到250字之间，仅介绍文章核心内容。
    请用中文作答，去除特殊字符，输出内容开头为“这篇文章”。

  # 内容清洗设置
  ignoreRules: # 可选：自定义内容清洗的正则规则
    # - "\\{%.*?%\\}"
    # - "!\\[.*?\\]\\(.*?\\)"

  max_token: 5000 # 输入内容最大 token 长度（非输出限制）
  concurrency: 2 # 并发处理数，建议不高于 5

# 更加美观的RSS订阅源
# see：https://github.com/willow-god/hexo-pretty-feed
feed:
  enable: true
  content: false
  content_limit: 40
  content_limit_delim: " "
  order_by: -date
  type:
    - atom
    - rss2
  path:
    - atom.xml
    - rss2.xml
  limit: 25
  hub:
  icon: /img/爆米花.svg
  autodiscovery: true
  pretty_atom_file: ./rss/atom.xsl
  pretty_rss2_file: ./rss/rss2.xsl
# //以下为rss配置项说明
#enable - 启用插件。默认为启用。
#type - Feed 类型。可为 atom、rss2，或同时输出多个类型（数组形式）。默认：atom
#feed:
#  type:
#    - atom
#    - rss2
#     - path:
#    - atom.xml
#    - rss2.xml
#path - 输出路径。若配置多个类型，则顺序需与 type 一一对应。
#limit - Feed 中最多包含的文章数。设为 0 或 false 表示不限制。
#hub - PubSubHubbub 的 hub 地址（可选）。
#content - 是否在 Feed 中包含完整文章内容。
#content_limit - 若未包含全文，此项设置摘要字符数。
#content_limit_delim - 设置字符截断的分隔符，只在启用 content_limit 时生效。
#order_by - 排序方式。默认：-date
#icon - Feed 图标。默认为使用邮箱对应的 gravatar。
#autodiscovery - 是否添加自动发现标签。默认启用。
#template - 自定义模板路径，可为字符串或数组（与 type 一一对应）。
#feed:
#  type:
#    - atom
#    - rss2
#  template:
#    - ./source/custom.xml
#pretty_atom_file - 插入 Atom Feed 顶部的样式文件路径（如：XSL 文件），建议使用相对路径。留空则不插入。
#pretty_rss2_file - 插入 RSS2 Feed 顶部的样式文件路径。留空则不插入。
# // ---Rss配置项说明结束---  //

#//  --- 信阀留言板 开始 ---  //
#envelope_comment
#seehttps://akilar.top/posts/e2d3c450/
envelope_comment:
  enable: true #控制开关
  custom_pic:
    cover: https://blog-image-1302787555.cos.ap-guangzhou.myqcloud.com//img%E7%95%99%E8%A8%80%E6%9D%BF%E8%83%8C%E6%99%AF.webp #信笺头部图片
    line: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/line.png #信笺底部图片
    beforeimg: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/before.png # 信封前半部分
    afterimg: https://npm.elemecdn.com/hexo-butterfly-envelope/lib/after.png # 信封后半部分
  message: #信笺正文，多行文本，写法如下
    - 饭吃不香了吗？
    - 开始回忆起往昔了吗？
    - 有什么想吐槽的？
    - 哪怕是有什么想吃的，都可以告诉我哦~
  bottom: 自动书记人偶竭诚为您服务！ #仅支持单行文本
  height: #1024px，信封划出的高度
  path: #【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html
  front_matter: #【可选】comments页面的 front_matter 配置
    title: 留言板
    comments: true
    top_img: false
    type: envelope

#//  --- 信阀留言板 结束 ---  //

#//  --- 搜索预览图小开关 --- //
# 本地搜索
search:
  path: search.xml
  field: post
  content: true # 文章内容
  template: source/_data/search.xml # 自定义模板

# hexo-safego安全跳转插件
# see https://blog.liushen.fun/posts/1dfd1f41/
hexo_safego:
  # 基本功能设置
  general:
    enable: true # 启用插件
    enable_base64_encode: true # 使用 Base64 编码
    enable_target_blank: true # 打开新窗口
  # 安全设置
  security:
    url_param_name: "gb" # URL 参数名
    html_file_name: "go.html" # 重定向页面的文件名
    ignore_attrs: # 忽略处理的 HTML 属性
      - "data-fancybox"
  # 容器与页面设置
  scope:
    apply_containers: # 应用的容器选择器
      - "#article-container"
    apply_pages: # 应用的页面路径
      - "/posts/"
      - "/devices/"
    exclude_pages: # 排除的页面路径
  # 域名白名单
  whitelist:
    domain_whitelist: # 允许的白名单域名
      - "gbfun.cc"
  # 页面外观设置
  appearance:
    avatar: /img/博客静态头像.jpg # 头像路径
    title: "GB 的记事簿📒" # 页面标题
    subtitle: "安全中心" # 页面副标题
    darkmode: false # 是否启用深色模式
    countdowntime: 10 # 倒计时秒数
  # 调试设置
  debug:
    enable: false # 启用调试模式

swpp:
  # 是否启用，默认 false
  enable: true
  # 配置文件路径，以 `/` 结尾表示加载指定文件夹下的所有文件，注意文件夹中只能有配置文件，不能有其它文件及文件夹
  config_path: "swpp.config.ts"
  # 是否生成 sw
  serviceWorker: true
  # 是否向所有 HTML 插入注册 sw 的代码
  auto_register: true
  # 是否生成 DOM 端的 JS 文件并在 HTML 中插入 script
  gen_dom: true
  # 是否追踪链接，默认 false
  # ⚠️警告！！！未启用链接追踪时不要使用永久缓存，否则会导致被缓存的数据永远不会更新，在您不再使用该资源时，缓存也不会被删除！！！
  track_link: false
  # 生成的 diff 文件的路径（可以是绝对路径也可以是相对路径，使用相对路径时相对于网站发布目录），留空表示不生成（默认为 null）
  gen_diff: "./diff.json"
  # 是否在执行 hexo deploy 时自动执行 swpp 指令
  # auto_exec: false
  # 检查更新的网址，默认 "https://registry.npmjs.org"，注意不能以斜杠结尾
  npm_url: "https://registry.npmmirror.com"
  #
  # 排序规则。
  # 该配置项是为了对 hexo 中的一些变量进行排序，避免每次生成 HTML 时由于这些变量的顺序变动导致生成结果不完全相同。
  # 示例：
  # ```yaml
  # # 下面给出的值为插件的缺省值，用户设置该项不会直接覆盖这些值，只有用户也声明 posts、pages 或 tags 时才会覆盖对应的值。
  # swpp:
  #   sort_rules:
  #     posts: 'title'
  #     pages: 'title'
  #     tags: 'name'
  # ```
  # 其中 key 值为要排序的变量的名称，value 为变量排序时的依据，
  # 填 false 表示禁用该项排序，填 true 表示以 value 本身为键进行排序，填字符串表示以 value[tag] 为键进行排序。
  # sort_rules:

tencent_cdn:
  secretId: AKIDgFcprjOq48ze5NTZS9f0B9uUr12sZDyg # 你在https://console.cloud.tencent.com/cam/capi 获取到的SecretId
  secretKey: Zw783oOceT9fEbmmaAYl4Mn9KQQF3iCU # 你在https://console.cloud.tencent.com/cam/capi 获取到的SecretKey
  FlushType: flush # 刷新方式,flush为只刷新变更资源,delete为刷新网站下的全部缓存
  timer: 60000 # 延时器,单位为毫秒,延时多长时间再执行刷新命令,不需要的填写0
  PurgePath: https://blog.gbfun.cc # 需要刷新的链接，不支持多个，必须有http或者https协议头
